{"version":3,"sources":["layout/navBar.js","layout/index.js","conf/types.js","components/avatar/dragItem/index.js","components/avatar/head/index.js","components/avatar/avatarForm/index.js","components/avatar/index.js","components/accesories/accesories.js","components/accesories/iconItem.js","components/accesories/index.js","newAvatar/index.js","components/confirmation/index.js","avatarList/index.js","App.js","reportWebVitals.js","index.js"],"names":["useGlobal","setCurrentPage","Navbar","bg","variant","Brand","href","onClick","Nav","className","Link","props","Fragment","Container","children","type","style","image","src","process","eyesImage","mouthImage","marginTop","marginLeft","backgroundColor","borderRadius","width","height","Types","position","top","right","useState","password","userName","avatarName","avatarForm","setAvatarForm","validated","setValidated","currentAvatar","avatars","setAvatars","users","setUsers","handleChange","event","target","name","value","saveUser","concat","saveAvatar","newAvatar","items","avatarNameExists","find","avatar","userExists","user","Form","noValidate","onSubmit","preventDefault","currentTarget","checkValidity","alert","stopPropagation","Row","Group","as","Col","controlId","Label","Control","required","placeholder","onChange","Button","showAvatarForm","Card","margin","padding","minHeight","Body","hairs","eyes","mouth","body","bottoms","accessories","imageName","setAvatar","onDoubleClick","opacity","fontSize","fontWeight","cursor","alt","map","accessory","iterator","index","Accordion","defaultActiveKey","Header","Toggle","eventKey","Collapse","key","textAlign","show","handleClose","deleteAvatar","behavior","setLoginForm","loginForm","areCredentialsCorrect","login","Modal","onHide","closeButton","Title","Footer","setCurrentAvatar","showConfirmation","state","setState","filter","md","Subtitle","library","add","fab","App","currentPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","setGlobal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf49ae1a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useGlobal } from \"reactn\";\r\nimport { Navbar, Nav, Form, Button } from \"react-bootstrap\";\r\n\r\nexport default () => {\r\n  const [currentPage, setCurrentPage] = useGlobal(\"currentPage\");\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand\r\n        href=\"#\"\r\n        onClick={() => {\r\n          setCurrentPage(\"index\");\r\n        }}\r\n      >\r\n        South Park\r\n      </Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link\r\n          href=\"#\"\r\n          onClick={() => {\r\n            setCurrentPage(\"new\");\r\n          }}\r\n        >\r\n          New Avatar\r\n        </Nav.Link>\r\n        <Nav.Link\r\n          href=\"#\"\r\n          onClick={() => {\r\n            setCurrentPage(\"index\");\r\n          }}\r\n        >\r\n          Avatars\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport NavigationBar from \"./navBar\";\r\nimport { Container } from \"react-bootstrap\";\r\nexport default (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <NavigationBar />\r\n      <Container className=\"mt-5\">{props.children}</Container>\r\n    </React.Fragment>\r\n  );\r\n};","const mouth = \"mouth\";\r\nconst eyes = \"eyes\";\r\nconst hairs = \"hairs\";\r\nconst body = \"body\";\r\nconst bottoms = \"bottoms\";\r\n\r\nexport default { mouth, eyes, hairs, body, bottoms };\r\n","export default ({ type, style, image }) => {\r\n  return (\r\n    <div>\r\n      <img src={`${process.env.PUBLIC_URL}/${type}/${image}`} style={style} />\r\n    </div>\r\n  );\r\n};\r\n","import Types from \"../../../conf/types\";\r\nimport DragItem from \"../dragItem\";\r\n\r\nexport default ({ eyesImage, mouthImage }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"15px\",\r\n        marginLeft: \"39px\",\r\n        backgroundColor: \"#ffdbb5\",\r\n        borderRadius: \"100%\",\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n      }}\r\n    >\r\n      <DragItem\r\n        image={eyesImage}\r\n        type={Types.eyes}\r\n        style={{ height: \"160px\", position: \"absolute\", top: 4, right: 6 }}\r\n      />\r\n      <DragItem\r\n        image={mouthImage}\r\n        type={Types.mouth}\r\n        style={{ height: \"160px\", position: \"absolute\", top: 4, right: 6 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useGlobal } from \"reactn\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nexport default () => {\r\n  const [avatarForm, setAvatarForm] = useState({\r\n    password: \"\",\r\n    userName: \"\",\r\n    avatarName: \"\",\r\n  });\r\n  const [currentPage, setCurrentPage] = useGlobal(\"currentPage\");\r\n  const [validated, setValidated] = useState(false);\r\n  const [currentAvatar, setCurrentAvatar] = useGlobal(\"currentAvatar\");\r\n  const [avatars, setAvatars] = useGlobal(\"avatars\");\r\n  const [users, setUsers] = useGlobal(\"users\");\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setAvatarForm({ ...avatarForm, [name]: value });\r\n  };\r\n  let { userName, password, avatarName } = avatarForm;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValidated(true);\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      return;\r\n    } else {\r\n      if (userExists(avatarForm)) {\r\n        alert(\"User already exists, try a differnt userName\");\r\n        return;\r\n      }\r\n      if (avatarNameExists(avatarForm)) {\r\n        alert(\"Avatar Name already exists\");\r\n        return;\r\n      }\r\n      saveUser(avatarForm);\r\n      saveAvatar(avatarForm, currentAvatar);\r\n      setAvatarForm({\r\n        password: \"\",\r\n        userName: \"\",\r\n        avatarName: \"\",\r\n      });\r\n      setCurrentPage(\"index\");\r\n    }\r\n  };\r\n\r\n  const saveUser = (avatarForm) => {\r\n    setUsers(\r\n      users.concat({\r\n        userName: avatarForm.userName,\r\n        password: avatarForm.password,\r\n      })\r\n    );\r\n  };\r\n\r\n  const saveAvatar = (avatarForm, currentAvatar) => {\r\n    delete avatarForm.password;\r\n    let newAvatar = { ...avatarForm, items: currentAvatar };\r\n    setAvatars(avatars.concat(newAvatar));\r\n  };\r\n\r\n  const avatarNameExists = (avatarForm) => {\r\n    return avatars.find((avatar) => {\r\n      return avatar.name === avatarForm.avatarName;\r\n    });\r\n  };\r\n\r\n  const userExists = (avatarForm) => {\r\n    return users.find((user) => {\r\n      return user.userName === avatarForm.userName;\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <h4>Save Avatar</h4>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"formGridEmail\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Enter email\"\r\n              name=\"userName\"\r\n              onChange={handleChange}\r\n              value={userName}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              value={password}\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"formGridCity\">\r\n            <Form.Label>Avatar Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Cartman\"\r\n              name=\"avatarName\"\r\n              onChange={handleChange}\r\n              value={avatarName}\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Save\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import { Card } from \"react-bootstrap\";\r\nimport Head from \"./head\";\r\nimport Types from \"../../conf/types\";\r\nimport DragItem from \"./dragItem\";\r\nimport AvatarFrom from \"./avatarForm\";\r\n\r\nexport default (props) => {\r\n  const { avatar, showAvatarForm, height } = props;\r\n  return (\r\n    <div>\r\n      <Card\r\n        style={{ margin: \"20px\", padding: \"20px\", minHeight: `${height}px` }}\r\n      >\r\n        {props.children}\r\n        <Card.Body style={{ position: \"relative\", margin: \"auto\" }}>\r\n          <DragItem\r\n            image={avatar.hairs}\r\n            type={Types.hairs}\r\n            style={{\r\n              height: \"160px\",\r\n              position: \"absolute\",\r\n              top: 10,\r\n              right: 12,\r\n            }}\r\n          />\r\n          <Head eyesImage={avatar.eyes} mouthImage={avatar.mouth} />\r\n          <DragItem\r\n            image={avatar.body}\r\n            type={Types.body}\r\n            style={{ width: \"180px\", position: \"absolute\", top: \"-30px\" }}\r\n          />\r\n          <DragItem\r\n            image={avatar.bottoms}\r\n            type={Types.bottoms}\r\n            style={{ width: \"180px\", position: \"absolute\", top: \"-68px\" }}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n      {showAvatarForm ? (\r\n        <Card style={{ margin: \"20px\", padding: \"20px\" }}>\r\n          <Card.Body>\r\n            <AvatarFrom />\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import Types from \"../../conf/types\";\r\nexport const accessories = [\r\n  {\r\n    name: Types.eyes,\r\n    items: [\"eyes1.jpg\", \"eyes2.jpg\"],\r\n  },\r\n  {\r\n    name: Types.hairs,\r\n    items: [\r\n      \"hairs1.jpg\",\r\n      \"hairs2.jpg\",\r\n      \"hairs3.jpg\",\r\n      \"hairs4.jpg\",\r\n      \"hairs5.jpg\",\r\n      \"hairs6.jpg\",\r\n      \"hairs7.jpg\",\r\n    ],\r\n  },\r\n  {\r\n    name: Types.mouth,\r\n    items: [\"mouth1.jpg\", \"mouth2.jpg\", \"mouth3.jpg\", \"mouth4.jpg\"],\r\n  },\r\n  {\r\n    name: Types.body,\r\n    items: [\"body1.jpg\", \"body2.jpg\", \"body3.jpg\", \"body4.jpg\", \"body5.jpg\"],\r\n  },\r\n  {\r\n    name: Types.bottoms,\r\n    items: [\"bottoms1.jpg\", \"bottoms2.jpg\", \"bottoms3.jpg\"],\r\n  },\r\n];\r\n","import React, { useGlobal } from \"reactn\";\r\n\r\nexport default ({ imageName, type }) => {\r\n  const [avatar, setAvatar] = useGlobal(\"currentAvatar\");\r\n  return (\r\n    <span\r\n      onDoubleClick={() => {\r\n        setAvatar({ ...avatar, [type]: imageName });\r\n      }}\r\n      style={{\r\n        opacity: 1,\r\n        fontSize: 25,\r\n        fontWeight: \"bold\",\r\n        cursor: \"pointer\",\r\n      }}\r\n    >\r\n      <img\r\n        style={{ width: \"100px\" }}\r\n        src={`${process.env.PUBLIC_URL}/${type}/${imageName}`}\r\n        alt=\"accessory\"\r\n      />\r\n    </span>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { accessories } from \"./accesories\";\r\nimport { Accordion, Card, Button } from \"react-bootstrap\";\r\nimport IconItem from \"./iconItem\";\r\n\r\nexport default () => {\r\n  return accessories.map((accessory, iterator) => {\r\n    const index = iterator + 1;\r\n    return (\r\n      <Accordion defaultActiveKey={index} key={iterator}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey={index}>\r\n              {accessory.name}\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey={index}>\r\n            <Card.Body style={{ height: \"170px\" }}>\r\n              {accessory.items.map((imageName, key) => {\r\n                return (\r\n                  <IconItem\r\n                    imageName={imageName}\r\n                    type={accessory.name}\r\n                    key={key}\r\n                  />\r\n                );\r\n              })}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    );\r\n  });\r\n};\r\n","import React, { useGlobal } from \"reactn\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport Avatar from \"../components/avatar\";\r\nimport Accessories from \"../components/accesories/index\";\r\n\r\nexport default () => {\r\n  const [avatar, setAvatars] = useGlobal(\"currentAvatar\");\r\n  return (\r\n    <Card>\r\n      <Row>\r\n        <Col>\r\n          <h4 style={{ textAlign: \"center\" }}>Avatar</h4>\r\n          <Avatar avatar={avatar} showAvatarForm={true} height={250} />\r\n        </Col>\r\n        <Col>\r\n          <h4>Accessories</h4>\r\n          <Accessories />\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n","import { useState, useGlobal } from \"reactn\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\n\r\nexport default ({ show, handleClose, userName, deleteAvatar, behavior }) => {\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setLoginForm({ ...loginForm, [name]: value });\r\n  };\r\n  const [validated, setValidated] = useState(false);\r\n  const [loginForm, setLoginForm] = useState({\r\n    password: \"\",\r\n    userName: \"\",\r\n  });\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValidated(true);\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      areCredentialsCorrect(loginForm, userName);\r\n    } else {\r\n      if (loginForm.userName != userName) {\r\n        alert(\"this avatar is not yours\");\r\n        return;\r\n      }\r\n      if (areCredentialsCorrect(loginForm, userName)) {\r\n        if (behavior === \"delete\") deleteAvatar();\r\n      } else {\r\n        alert(\"Credentials incorrect\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const areCredentialsCorrect = (login) => {\r\n    return users.find((user) => {\r\n      return user.userName === userName && user.password === login.password;\r\n    });\r\n  };\r\n\r\n  const [users, setUsers] = useGlobal(\"users\");\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Please enter your credentials</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name=\"userName\"\r\n              onChange={handleChange}\r\n              value={loginForm.userName}\r\n              placeholder=\"Enter email\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              value={loginForm.password}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useGlobal, useState } from \"reactn\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport Avatar from \"../components/avatar\";\r\nimport Confirmation from \"../components/confirmation\";\r\nexport default () => {\r\n  const [avatars, setAvatars] = useGlobal(\"avatars\");\r\n  const [currentAvatar, setCurrentAvatar] = useGlobal(\"currentAvatar\");\r\n  const [currentPage, setCurrentPage] = useGlobal(\"currentPage\");\r\n  const [state, setState] = useState({\r\n    showConfirmation: false,\r\n    userName: \"\",\r\n    behavior: \"\",\r\n  });\r\n\r\n  const deleteAvatar = (userName) => {\r\n    setState({\r\n      ...state,\r\n      showConfirmation: true,\r\n      userName: userName,\r\n      behavior: \"delete\",\r\n    });\r\n  };\r\n\r\n  const useAvatar = (items) => {\r\n    setCurrentAvatar(items);\r\n    setCurrentPage(\"new\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Confirmation\r\n        deleteAvatar={() => {\r\n          setAvatars(\r\n            avatars.filter((avatar) => {\r\n              return avatar.userName != state.userName;\r\n            })\r\n          );\r\n          setState({\r\n            showConfirmation: false,\r\n            userName: \"\",\r\n            behavior: \"\",\r\n          });\r\n        }}\r\n        userName={state.userName}\r\n        behavior={state.behavior}\r\n        show={state.showConfirmation}\r\n        handleClose={() => {\r\n          setState({ ...state, showConfirmation: false });\r\n        }}\r\n      />\r\n      <Row>\r\n        {avatars.map((avatar) => {\r\n          return (\r\n            <Col md=\"4\">\r\n              <Avatar avatar={avatar.items} showAvatarForm={false} height={350}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Link\r\n                      href=\"#\"\r\n                      onClick={() => {\r\n                        useAvatar(avatar.items);\r\n                      }}\r\n                    >\r\n                      Use\r\n                    </Card.Link>\r\n                    <Card.Link\r\n                      href=\"#\"\r\n                      onClick={() => {\r\n                        deleteAvatar(avatar.userName);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Card.Link>\r\n                    <Card.Title>Author: {avatar.userName}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">\r\n                      {avatar.avatarName}\r\n                    </Card.Subtitle>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Avatar>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { useGlobal } from \"reactn\";\r\nimport Layout from \"./layout\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport NewAvatar from \"./newAvatar\";\r\nimport AvtarList from \"./avatarList\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nlibrary.add(fab);\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useGlobal(\"currentPage\");\r\n  return (\r\n    <Layout>{currentPage === \"new\" ? <NewAvatar /> : <AvtarList />}</Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { setGlobal } from \"reactn\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nsetGlobal({\n  currentAvatar: {\n    body: \"body1.jpg\",\n    bottoms: \"bottoms1.jpg\",\n    eyes: \"eyes1.jpg\",\n    hairs: \"hairs3.jpg\",\n    mouth: \"mouth1.jpg\",\n  },\n  avatars: [],\n  users: [],\n  currentPage: \"index\",\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}