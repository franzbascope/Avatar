{"version":3,"sources":["layout/navBar.js","layout/index.js","conf/types.js","components/avatar/dragItem/index.js","components/avatar/head/index.js","components/avatar/avatarForm/index.js","components/avatar/index.js","components/accesories/accesories.js","components/accesories/iconItem.js","components/accesories/index.js","newAvatar/index.js","components/confirmation/index.js","avatarList/index.js","App.js","reportWebVitals.js","index.js"],"names":["useGlobal","setCurrentPage","Navbar","bg","variant","Brand","href","onClick","Nav","className","Link","props","Fragment","Container","children","type","style","image","src","process","eyesImage","mouthImage","marginTop","marginLeft","backgroundColor","borderRadius","width","height","Types","position","top","right","useState","password","userName","avatarName","avatarForm","setAvatarForm","validated","setValidated","currentAvatar","setCurrentAvatar","avatars","setAvatars","users","setUsers","handleChange","event","target","name","value","saveAvatarToState","saveAvatar","body","bottoms","eyes","hairs","mouth","saveUser","concat","newAvatar","items","avatarNameExists","find","avatar","areCredentialsCorrect","user","userExists","Form","noValidate","onSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","alert","Row","Group","as","Col","controlId","Label","Control","required","placeholder","onChange","Button","showAvatarForm","Card","margin","padding","minHeight","Body","left","accessories","imageName","setAvatar","onDoubleClick","cursor","alt","map","accessory","iterator","index","Accordion","defaultActiveKey","Header","Toggle","eventKey","Collapse","key","textAlign","show","handleClose","deleteAvatar","behavior","setLoginForm","loginForm","login","Modal","onHide","closeButton","Title","Footer","showConfirmation","state","setState","filter","md","Subtitle","library","add","fab","App","currentPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","setGlobal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcce31bd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useGlobal } from \"reactn\";\r\nimport { Navbar, Nav, Form, Button } from \"react-bootstrap\";\r\n\r\nexport default () => {\r\n  const [currentPage, setCurrentPage] = useGlobal(\"currentPage\");\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand\r\n        href=\"#\"\r\n        onClick={() => {\r\n          setCurrentPage(\"index\");\r\n        }}\r\n      >\r\n        South Park\r\n      </Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link\r\n          href=\"#\"\r\n          onClick={() => {\r\n            setCurrentPage(\"new\");\r\n          }}\r\n        >\r\n          New Avatar\r\n        </Nav.Link>\r\n        <Nav.Link\r\n          href=\"#\"\r\n          onClick={() => {\r\n            setCurrentPage(\"index\");\r\n          }}\r\n        >\r\n          Avatars\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport NavigationBar from \"./navBar\";\r\nimport { Container } from \"react-bootstrap\";\r\nexport default (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <NavigationBar />\r\n      <Container className=\"mt-5\">{props.children}</Container>\r\n    </React.Fragment>\r\n  );\r\n};","const mouth = \"mouth\";\r\nconst eyes = \"eyes\";\r\nconst hairs = \"hairs\";\r\nconst body = \"body\";\r\nconst bottoms = \"bottoms\";\r\n\r\nexport default { mouth, eyes, hairs, body, bottoms };\r\n","export default (props) => {\r\n  const { type, style, image } = props;\r\n  return (\r\n    <div>\r\n      <img src={`${process.env.PUBLIC_URL}/${type}/${image}`} style={style} />\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n","import Types from \"../../../conf/types\";\r\nimport DragItem from \"../dragItem\";\r\n\r\nexport default ({ eyesImage, mouthImage }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"15px\",\r\n        marginLeft: \"41px\",\r\n        backgroundColor: \"#ffdbb5\",\r\n        borderRadius: \"100%\",\r\n        width: \"90px\",\r\n        height: \"90px\",\r\n      }}\r\n    >\r\n      <DragItem\r\n        image={eyesImage}\r\n        type={Types.eyes}\r\n        style={{ height: \"250px\", position: \"absolute\", top: -40, right: -35 }}\r\n      />\r\n      <DragItem\r\n        image={mouthImage}\r\n        type={Types.mouth}\r\n        style={{ height: \"250px\", position: \"absolute\", top: -40, right: -35 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useGlobal } from \"reactn\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport avatar from \"..\";\r\nexport default () => {\r\n  const [avatarForm, setAvatarForm] = useState({\r\n    password: \"\",\r\n    userName: \"\",\r\n    avatarName: \"\",\r\n  });\r\n  const [currentPage, setCurrentPage] = useGlobal(\"currentPage\");\r\n  const [validated, setValidated] = useState(false);\r\n  const [currentAvatar, setCurrentAvatar] = useGlobal(\"currentAvatar\");\r\n  const [avatars, setAvatars] = useGlobal(\"avatars\");\r\n  const [users, setUsers] = useGlobal(\"users\");\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setAvatarForm({ ...avatarForm, [name]: value });\r\n  };\r\n  let { userName, password, avatarName } = avatarForm;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValidated(true);\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      return;\r\n    } else {\r\n      if (areCredentialsCorrect(avatarForm)) {\r\n        if (avatarNameExists(avatarForm)) {\r\n          alert(\"Avatar Name already exists\");\r\n          return;\r\n        }\r\n        saveAvatarToState();\r\n        setCurrentPage(\"index\");\r\n        return;\r\n      } else {\r\n        if (userExists(avatarForm)) {\r\n          alert(\"User already exists, try a differnt userName\");\r\n          return;\r\n        }\r\n        if (avatarNameExists(avatarForm)) {\r\n          alert(\"Avatar Name already exists\");\r\n          return;\r\n        }\r\n        saveUser(avatarForm);\r\n        saveAvatarToState();\r\n        setCurrentPage(\"index\");\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveAvatarToState = () => {\r\n    saveAvatar(avatarForm, currentAvatar);\r\n    setAvatarForm({\r\n      password: \"\",\r\n      userName: \"\",\r\n      avatarName: \"\",\r\n    });\r\n    setCurrentAvatar({\r\n      body: \"body1.png\",\r\n      bottoms: \"bottoms1.png\",\r\n      eyes: \"eyes1.png\",\r\n      hairs: \"hairs2.png\",\r\n      mouth: \"mouth1.png\",\r\n    });\r\n  };\r\n\r\n  const saveUser = (avatarForm) => {\r\n    setUsers(\r\n      users.concat({\r\n        userName: avatarForm.userName,\r\n        password: avatarForm.password,\r\n      })\r\n    );\r\n  };\r\n\r\n  const saveAvatar = (avatarForm, currentAvatar) => {\r\n    delete avatarForm.password;\r\n    let newAvatar = { ...avatarForm, items: currentAvatar };\r\n    setAvatars(avatars.concat(newAvatar));\r\n  };\r\n\r\n  const avatarNameExists = (avatarForm) => {\r\n    return avatars.find((avatar) => {\r\n      return avatar.name === avatarForm.avatarName;\r\n    });\r\n  };\r\n\r\n  const areCredentialsCorrect = (avatarForm) => {\r\n    return users.find((user) => {\r\n      return (\r\n        user.userName === avatarForm.userName &&\r\n        user.password === avatarForm.password\r\n      );\r\n    });\r\n  };\r\n\r\n  const userExists = (avatarForm) => {\r\n    return users.find((user) => {\r\n      return user.userName === avatarForm.userName;\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <h4>Save Avatar</h4>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"formGridEmail\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Enter email\"\r\n              name=\"userName\"\r\n              onChange={handleChange}\r\n              value={userName}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              value={password}\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"formGridCity\">\r\n            <Form.Label>Avatar Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Cartman\"\r\n              name=\"avatarName\"\r\n              onChange={handleChange}\r\n              value={avatarName}\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Save\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import { Card } from \"react-bootstrap\";\r\nimport Head from \"./head\";\r\nimport Types from \"../../conf/types\";\r\nimport DragItem from \"./dragItem\";\r\nimport AvatarFrom from \"./avatarForm\";\r\n\r\nexport default (props) => {\r\n  const { avatar, showAvatarForm, height } = props;\r\n  return (\r\n    <div style={{ position: \"sticky\", top: 10 }}>\r\n      <Card\r\n        style={{ margin: \"20px\", padding: \"20px\", minHeight: `${height}px` }}\r\n      >\r\n        {props.children}\r\n        <Card.Body style={{ margin: \"auto\", position: \"relative\" }}>\r\n          <DragItem\r\n            style={{\r\n              width: \"200px\",\r\n              position: \"absolute\",\r\n              right: -37,\r\n              top: -40,\r\n            }}\r\n            image={avatar.hairs}\r\n            type={Types.hairs}\r\n          ></DragItem>\r\n          <Head eyesImage={avatar.eyes} mouthImage={avatar.mouth} />\r\n          <DragItem\r\n            style={{\r\n              width: \"250px\",\r\n              position: \"absolute\",\r\n              top: -70,\r\n              left: -18,\r\n            }}\r\n            image={avatar.body}\r\n            type={Types.body}\r\n          />\r\n          <DragItem\r\n            style={{\r\n              width: \"270px\",\r\n              position: \"absolute\",\r\n              top: -89,\r\n              left: -28,\r\n            }}\r\n            image={avatar.bottoms}\r\n            type={Types.bottoms}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n      {showAvatarForm ? (\r\n        <Card style={{ margin: \"20px\", padding: \"20px\" }}>\r\n          <Card.Body>\r\n            <AvatarFrom />\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import Types from \"../../conf/types\";\r\nexport const accessories = [\r\n  {\r\n    name: Types.eyes,\r\n    items: [\"eyes1.png\", \"eyes2.png\", \"eyes3.png\", \"eyes4.png\", \"eyes5.png\"],\r\n  },\r\n  {\r\n    name: Types.hairs,\r\n    items: [\r\n      \"hairs1.png\",\r\n      \"hairs2.png\",\r\n      \"hairs3.png\",\r\n      \"hairs4.png\",\r\n      \"hairs5.png\",\r\n    ],\r\n  },\r\n  {\r\n    name: Types.mouth,\r\n    items: [\r\n      \"mouth1.png\",\r\n      \"mouth2.png\",\r\n      \"mouth3.png\",\r\n      \"mouth4.png\",\r\n      \"mouth5.png\",\r\n    ],\r\n  },\r\n  {\r\n    name: Types.body,\r\n    items: [\"body1.png\", \"body2.png\", \"body3.png\", \"body4.png\", \"body5.png\"],\r\n  },\r\n  {\r\n    name: Types.bottoms,\r\n    items: [\r\n      \"bottoms1.png\",\r\n      \"bottoms2.png\",\r\n      \"bottoms3.png\",\r\n      \"bottoms4.png\",\r\n      \"bottoms5.png\",\r\n    ],\r\n  },\r\n];\r\n","import React, { useGlobal } from \"reactn\";\r\n\r\nexport default ({ imageName, type }) => {\r\n  const [avatar, setAvatar] = useGlobal(\"currentAvatar\");\r\n  return (\r\n    <img\r\n      onDoubleClick={() => {\r\n        setAvatar({ ...avatar, [type]: imageName });\r\n      }}\r\n      style={{\r\n        width: \"150px\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      src={`${process.env.PUBLIC_URL}/${type}/${imageName}`}\r\n      alt=\"accessory\"\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { accessories } from \"./accesories\";\r\nimport { Accordion, Card, Button } from \"react-bootstrap\";\r\nimport IconItem from \"./iconItem\";\r\n\r\nexport default () => {\r\n  return accessories.map((accessory, iterator) => {\r\n    const index = iterator + 1;\r\n    return (\r\n      <Accordion defaultActiveKey={index} key={iterator}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey={index}>\r\n              {accessory.name}\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey={index}>\r\n            <Card.Body>\r\n              {accessory.items.map((imageName, key) => {\r\n                return (\r\n                  <IconItem\r\n                    imageName={imageName}\r\n                    type={accessory.name}\r\n                    key={key}\r\n                  />\r\n                );\r\n              })}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    );\r\n  });\r\n};\r\n","import React, { useGlobal } from \"reactn\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport Avatar from \"../components/avatar\";\r\nimport Accessories from \"../components/accesories/index\";\r\n\r\nexport default () => {\r\n  const [avatar, setAvatars] = useGlobal(\"currentAvatar\");\r\n  return (\r\n    <Card>\r\n      <Row>\r\n        <Col>\r\n          <h4 style={{ textAlign: \"center\" }}>Avatar</h4>\r\n          <Avatar avatar={avatar} showAvatarForm={true} height={250} />\r\n        </Col>\r\n        <Col>\r\n          <h4>Accessories</h4>\r\n          <Accessories />\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n","import { useState, useGlobal } from \"reactn\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\n\r\nexport default ({ show, handleClose, userName, deleteAvatar, behavior }) => {\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setLoginForm({ ...loginForm, [name]: value });\r\n  };\r\n  const [validated, setValidated] = useState(false);\r\n  const [loginForm, setLoginForm] = useState({\r\n    password: \"\",\r\n    userName: \"\",\r\n  });\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValidated(true);\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n      areCredentialsCorrect(loginForm, userName);\r\n    } else {\r\n      if (loginForm.userName != userName) {\r\n        alert(\"this avatar is not yours\");\r\n        return;\r\n      }\r\n      if (areCredentialsCorrect(loginForm, userName)) {\r\n        if (behavior === \"delete\") deleteAvatar();\r\n      } else {\r\n        alert(\"Credentials incorrect\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const areCredentialsCorrect = (login) => {\r\n    return users.find((user) => {\r\n      return user.userName === userName && user.password === login.password;\r\n    });\r\n  };\r\n\r\n  const [users, setUsers] = useGlobal(\"users\");\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Please enter your credentials</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name=\"userName\"\r\n              onChange={handleChange}\r\n              value={loginForm.userName}\r\n              placeholder=\"Enter email\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              value={loginForm.password}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useGlobal, useState } from \"reactn\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport Avatar from \"../components/avatar\";\r\nimport Confirmation from \"../components/confirmation\";\r\nexport default () => {\r\n  const [avatars, setAvatars] = useGlobal(\"avatars\");\r\n  const [currentAvatar, setCurrentAvatar] = useGlobal(\"currentAvatar\");\r\n  const [currentPage, setCurrentPage] = useGlobal(\"currentPage\");\r\n  const [state, setState] = useState({\r\n    showConfirmation: false,\r\n    userName: \"\",\r\n    behavior: \"\",\r\n  });\r\n\r\n  const deleteAvatar = (userName) => {\r\n    setState({\r\n      ...state,\r\n      showConfirmation: true,\r\n      userName: userName,\r\n      behavior: \"delete\",\r\n    });\r\n  };\r\n\r\n  const useAvatar = (items) => {\r\n    setCurrentAvatar(items);\r\n    setCurrentPage(\"new\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Confirmation\r\n        deleteAvatar={() => {\r\n          setAvatars(\r\n            avatars.filter((avatar) => {\r\n              return avatar.userName != state.userName;\r\n            })\r\n          );\r\n          setState({\r\n            showConfirmation: false,\r\n            userName: \"\",\r\n            behavior: \"\",\r\n          });\r\n        }}\r\n        userName={state.userName}\r\n        behavior={state.behavior}\r\n        show={state.showConfirmation}\r\n        handleClose={() => {\r\n          setState({ ...state, showConfirmation: false });\r\n        }}\r\n      />\r\n      <Row>\r\n        {avatars.map((avatar) => {\r\n          return (\r\n            <Col md=\"4\">\r\n              <Avatar avatar={avatar.items} showAvatarForm={false} height={350}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Link\r\n                      href=\"#\"\r\n                      onClick={() => {\r\n                        useAvatar(avatar.items);\r\n                      }}\r\n                    >\r\n                      Use\r\n                    </Card.Link>\r\n                    <Card.Link\r\n                      href=\"#\"\r\n                      onClick={() => {\r\n                        deleteAvatar(avatar.userName);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Card.Link>\r\n                    <Card.Title>Author: {avatar.userName}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">\r\n                      {avatar.avatarName}\r\n                    </Card.Subtitle>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Avatar>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { useGlobal } from \"reactn\";\r\nimport Layout from \"./layout\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport NewAvatar from \"./newAvatar\";\r\nimport AvtarList from \"./avatarList\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nlibrary.add(fab);\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useGlobal(\"currentPage\");\r\n  return (\r\n    <Layout>{currentPage === \"new\" ? <NewAvatar /> : <AvtarList />}</Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { setGlobal } from \"reactn\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nsetGlobal({\r\n  currentAvatar: {\r\n    body: \"body1.png\",\r\n    bottoms: \"bottoms1.png\",\r\n    eyes: \"eyes1.png\",\r\n    hairs: \"hairs2.png\",\r\n    mouth: \"mouth1.png\",\r\n  },\r\n  avatars: [],\r\n  users: [],\r\n  currentPage: \"index\",\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}